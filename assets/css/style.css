* {
  background-color: #9bfff2;
  font-family: "Open Sans", sans-serif;
}

#btnStart,
#btnQuit {
  display: flex table-column;
  flex-direction: row;
  align-self: center;
  background: radial-gradient(
    circle,
    rgb(144, 230, 241) 0%,
    rgba(5, 255, 201, 0.954) 100%
  );
  border-radius: 8px;
  color: #13293d;
  cursor: pointer;
  font-size: 2em;
  letter-spacing: 0.21px;
  line-height: 16px;
  max-width: 255px;
  padding: 20px 52px;
  text-align: center;
  transition-duration: 0.15s;
  transition-property: background-color;
  transition-timing-function: linear;
  margin-top: 0.6em;
}

#quizTitlePage {
  display: flex;
  flex-direction: column;
  justify-content: center;
  border-width: 5px;
  border-radius: 4px;
  border-color: darkslategray;
}

#quizTitle {
  border-width: 60vw;
  border-color: dimgrey;
  font: size 80px;
}

#quizTitle,
#startQuitbtn,
#directions {
  display: flex;
  align-self: center;
  align-content: row;
  border-width: 60vw;
  border-color: dimgrey;
}

#startQuitbtn {
  display: table-row;
  align-content: center;
}

#countDown {
  font-family: "Orbitron", sans-serif;
  margin: 60px auto;
  text-align: center;
  vertical-align: middle;
  font-size: 30px;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  border-radius: 8px;
  width: 20vw;
  background-color: #4bbaab;
  padding: 20px;
  border-width: 30px;
  border-color: #13293d;
}

#qContainer {
  justify-content: flex;
  min-height: 90px;
  margin: 20px 120px;
  text-align: center;
  font-size: 30px;
  box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);
  transition: 0.3s;
  width: 80vw;
  background-color: #0011ff0a;
  padding-top: 20px;
  border-radius: 8px;
  border-style: groove;
  border-color: #16447062;
  border-width: 5px;
}

#theQuestion {
  display: block;
  margin: 20px 20px 50px 20px;
  border-color: darkslategray;
  border-width: 5px;
}

.hide {
  display: none;
}

.btn-grid {
  display: grid;
  grid-template-columns: auto auto;
  grid-template-rows: auto auto;
  margin: 20px;
}

.Abutton,
.Cbutton {
  grid-column-start: 1;
}

.Bbutton,
.Dbutton {
  grid-column-start: 2;
}

.Abutton,
.Bbutton,
.Cbutton,
.Dbutton {
  align-self: center;
  background: radial-gradient(
    circle,
    rgba(144, 230, 241, 0.287) 0%,
    rgba(5, 255, 201, 0.24) 100%
  );
  border-radius: 8px;
  color: darkslategray;
  cursor: pointer;
  font-size: 2em;
  letter-spacing: 0.21px;
  line-height: 16px;
  max-width: 255px;
  padding: 20px 52px;
  text-align: left;
  padding-left: 0;
  margin: 4px;
}

.animate {
  animation-duration: 0.75s;
  animation-delay: 0.5s;
  animation-name: animate-fade;
  animation-timing-function: cubic-bezier(0.26, 0.53, 0.74, 1.48);
  animation-fill-mode: backwards;
}

.animate.pop {
  animation-duration: 0.5s;
  animation-name: animate-pop;
  animation-timing-function: cubic-bezier(0.26, 0.53, 0.74, 1.48);
}

/* Glow In */
.animate.glow {
  animation-name: animate-glow;
  animation-timing-function: ease;
}

.animate.blur {
  animation-name: animate-blur;
  animation-timing-function: ease;
}
.animate.fade-out {
  animation-name: animate-fade-out;
  animation-timing-function: ease-out;
}

@keyframes animate-fade-out {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes animate-pop {
  0% {
    opacity: 0;
    transform: scale(0.5, 0.5);
  }

  100% {
    opacity: 1;
    transform: scale(1, 1);
  }
}

@keyframes animate-glow {
  0% {
    opacity: 0;
    filter: brightness(3) saturate(3);
    transform: scale(0.8, 0.8);
  }
  100% {
    opacity: 1;
    filter: brightness(1) saturate(1);
    transform: scale(1, 1);
  }
}

@keyframes animate-blur {
  0% {
    opacity: 0;
    filter: blur(15px);
  }
  100% {
    opacity: 1;
    filter: blur(0px);
  }
}

.delay-1 {
  animation-delay: 0.6s;
}
.delay-2 {
  animation-delay: 0.7s;
}
.delay-3 {
  animation-delay: 0.8s;
}
.delay-4 {
  animation-delay: 0.9s;
}
.delay-5 {
  animation-delay: 1s;
}
.delay-6 {
  animation-delay: 1.1s;
}
.delay-7 {
  animation-delay: 1.2s;
}
.delay-8 {
  animation-delay: 1.3s;
}
.delay-9 {
  animation-delay: 1.4s;
}
.delay-10 {
  animation-delay: 1.5s;
}

@media screen and (prefers-reduced-motion: reduce) {
  .animate {
    animation: none !important;
  }
}
